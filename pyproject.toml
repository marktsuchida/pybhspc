# This file is part of pybhspc
# Copyright 2024 Board of Regents of the University of Wisconsin System
# SPDX-License-Identifier: MIT

[build-system]
requires = [
    "Cython",
    "setuptools >= 64",
    "setuptools_scm >= 8",
]
build-backend = "setuptools.build_meta"

[project]
name = "pybhspc"
description = "Control Becker & Hickl SPC modules from Python"
keywords = [
    "TCSPC", "time tagger", "BH", "Becker & Hickl", "SPC", "SPCM",
    "photon counting", "fluorescence lifetime", "FLIM", "FCS"
]
classifiers = [
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Scientific/Engineering",
    "Topic :: System :: Hardware :: Hardware Drivers",
]
readme = "README.md"
dynamic = ["version"]
requires-python = ">= 3.10"
dependencies = []

[project.optional-dependencies]
# All development tools:
dev = [
    "Cython",
    "matplotlib",
    "mkdocs",
    "mkdocs-include-markdown-plugin",
    "mkdocs-jupyter",
    "mkdocs-material",
    "mkdocstrings[python] >= 0.19",
    "nox",
    "numpy",
    "pytest",
    "setuptools",
    "setuptools_scm",
    "wheel",  # Needed for 'pip install --no-build-isolation .'
]
# Minimal requirements for testing (in nox isolated environment):
testing = [
    "pytest >= 8.0",
]

[project.urls]
Documentation = "https://marktsuchida.github.io/pybhspc/"
Repository = "https://github.com/marktsuchida/pybhspc"

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
line-length = 79

[tool.ruff.lint]
select = [
    "B",    # flake8-bugbear
    "D",    # pydocstyle
    "E",    # pycodestyle Error
    "ERA",  # eradicate (commented code)
    "F",    # Pyflakes
    "FLY",  # flynt (f-strings)
    "I",    # isort
    "NPY",  # NumPy
    "PERF", # Perflint
    "PGH",  # pygrep-hooks
    "PL",   # Pylint
    "RUF",  # Ruff-specific
    "SIM",  # flake8-simplify
    "TRY",  # tryceratops (try/raise linting)
    "UP",   # pyupgrade
    "W",    # pycodestyle Warning
]
ignore = [
    "E501", # Line too long (leave alone if formatting left it)
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
    "D",
    "PLR2004", # Magic value used in comparison
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.setuptools_scm]
version_file = "src/bh_spc/_version.py"
